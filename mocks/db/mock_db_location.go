// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gitscan/internal/database (interfaces: LocationInterface)

// Package dbMocks is a generated GoMock package.
package dbMocks

import (
	reflect "reflect"

	database "github.com/gitscan/internal/database"
	gomock "github.com/golang/mock/gomock"
)

// MockLocationInterface is a mock of LocationInterface interface.
type MockLocationInterface struct {
	ctrl     *gomock.Controller
	recorder *MockLocationInterfaceMockRecorder
}

// MockLocationInterfaceMockRecorder is the mock recorder for MockLocationInterface.
type MockLocationInterfaceMockRecorder struct {
	mock *MockLocationInterface
}

// NewMockLocationInterface creates a new mock instance.
func NewMockLocationInterface(ctrl *gomock.Controller) *MockLocationInterface {
	mock := &MockLocationInterface{ctrl: ctrl}
	mock.recorder = &MockLocationInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocationInterface) EXPECT() *MockLocationInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockLocationInterface) Create(arg0 database.Location) (database.Location, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(database.Location)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockLocationInterfaceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockLocationInterface)(nil).Create), arg0)
}

// Creates mocks base method.
func (m *MockLocationInterface) Creates(arg0 []database.Location) ([]database.Location, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Creates", arg0)
	ret0, _ := ret[0].([]database.Location)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Creates indicates an expected call of Creates.
func (mr *MockLocationInterfaceMockRecorder) Creates(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Creates", reflect.TypeOf((*MockLocationInterface)(nil).Creates), arg0)
}

// FindByFindingID mocks base method.
func (m *MockLocationInterface) FindByFindingID(arg0 string) ([]database.Location, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByFindingID", arg0)
	ret0, _ := ret[0].([]database.Location)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByFindingID indicates an expected call of FindByFindingID.
func (mr *MockLocationInterfaceMockRecorder) FindByFindingID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByFindingID", reflect.TypeOf((*MockLocationInterface)(nil).FindByFindingID), arg0)
}
